
// PIC16F1934 Configuration Bit Settings

// 'C' source line config statements

// CONFIG1
#pragma config FOSC = INTOSC    // Oscillator Selection (INTOSC oscillator: I/O function on CLKIN pin)
#pragma config WDTE = OFF       // Watchdog Timer Enable (WDT disabled)
#pragma config PWRTE = OFF      // Power-up Timer Enable (PWRT disabled)
#pragma config MCLRE = ON       // MCLR Pin Function Select (MCLR/VPP pin function is MCLR)
#pragma config CP = OFF         // Flash Program Memory Code Protection (Program memory code protection is disabled)
#pragma config CPD = OFF        // Data Memory Code Protection (Data memory code protection is disabled)
#pragma config BOREN = ON       // Brown-out Reset Enable (Brown-out Reset enabled)
#pragma config CLKOUTEN = OFF   // Clock Out Enable (CLKOUT function is disabled. I/O or oscillator function on the CLKOUT pin)
#pragma config IESO = ON        // Internal/External Switchover (Internal/External Switchover mode is enabled)
#pragma config FCMEN = ON       // Fail-Safe Clock Monitor Enable (Fail-Safe Clock Monitor is enabled)

// CONFIG2
#pragma config WRT = OFF        // Flash Memory Self-Write Protection (Write protection off)
#pragma config VCAPEN = OFF     // Voltage Regulator Capacitor Enable (All VCAP pin functionality is disabled)
#pragma config PLLEN = ON       // PLL Enable (4x PLL enabled)
#pragma config STVREN = ON      // Stack Overflow/Underflow Reset Enable (Stack Overflow or Underflow will cause a Reset)
#pragma config BORV = LO        // Brown-out Reset Voltage Selection (Brown-out Reset Voltage (Vbor), low trip point selected.)
#pragma config LVP = ON         // Low-Voltage Programming Enable (Low-voltage programming enabled)

// #pragma config statements should precede project file includes.
// Use project enums instead of #define for ON and OFF.

#include <xc.h>
#include<stdint.h>

#define _XTAL_FREQ 500000

void display(char a,char b);    //function declaration.
void display_str(char A[]) ;    //function declaration.
void main()
{
    char A[]= "MICROCHIP";          //array 1.
    char B[]= "PIC16F1934";         //array 2.
    TRISC=TRISD=0;
    LATC=LATD=0;
    display(0x0E,0);                //display ON ,cursor ON
    display(0x3C,0);                //ACTIVATING second row of LCD display.
     
    while(1)
    {
     display(0x80,0);               //setting cursor on first  row.
     display_str(A);                //function passing the FIRST ARRAY.
     display(0xC0,0);               //setting cursor on second  row.
     display_str(B);                //function passing the SECOND ARRAY.
         
    }
     
}
void display_str(char A[])                  //getting the array and declared in char datatype.
{
    for(uint8_t i=0 ; A[i]!= '\0'; i++)    //initialize 'i' and  check A[i] != null.
     {
         display(A[i],1);                  //function passing the data and mode.
         __delay_ms(50);                   //delay between each character.
     }
}
void display(char a,char b)           //getting DATA in 'a' & MODE in 'b'.        
{
    LATD0=b;                          //command mode(RS->O COMMAND MODE ,RS->1 DATA MODE )
    LATC=a;                           //data is loaded.
    LATD1=1;                          //enable
    __delay_us(20);
    LATD1=0;                           //disable
    __delay_us(20);   
}

    